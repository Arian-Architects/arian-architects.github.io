---
import { join, relative } from 'node:path'
import { items } from 'src/data'
import { imageSize } from 'image-size'
import MainLayout from '@/layouts/MainLayout.astro'

export function getStaticPaths() {
  let constPaths = []
  for (let i in items) constPaths.push({ params: { slug: items[i].project } })
  return constPaths
}

const { slug } = Astro.params

const specificProj = items.filter((item) => item.project == slug)[0]

let images: any[] = new Array(specificProj.end - 1).fill(0).map((_, index) => join(process.cwd(), 'public', 'projects', slug, `${index + 1}.jpg`))
images = await Promise.all(images.map(i => {
  const { width, height } = imageSize(i)
  return {
    width, height, image: '/' + relative(join(process.cwd(), 'public'), i)
  }
}))
---

<MainLayout content={{ title: `${slug.split(',')[0]} - Arian Architects` }}>
  <div class="flex flex-col items-center space-y-8 pt-8 text-center">
    <h1 class="text-4xl text-black sm:text-6xl">{slug.split(',')[0]}</h1>
    <h2 class="text-4xl text-gray-500 sm:text-6xl">{slug.split(',')[1]}</h2>
    <a aria-label="Project Images" href="#project">
      <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"></path>
      </svg>
    </a>
    <div id="project" class="mt-10 h-[1px] w-full bg-gray-200 px-4 md:px-32"></div>
  </div>
  {
    specificProj && (
      <div id="my-gallery" class="grid grid-cols-1 py-10 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        {images.map(({ image, width, height }, index) => (
          <div class="relative flex w-full flex-col items-center py-5 text-center">
            <div class="h-[250px] w-[300px] rounded bg-gray-200" />
            <a href={image} data-pswp-width={width} data-pswp-height={height} class="contents">
              <img
                src={image}
                width={width}
                height={height}
                decoding="async"
                loading={index === 0 ? 'eager' : 'lazy'}
                alt={`Image ${index} - ${slug.split(',')[0]}`}
                class="absolute h-[250px] w-[300px] object-cover shadow"
              />
            </a>
          </div>
        ))}
      </div>
    )
  }
</MainLayout>

<script>
  import 'photoswipe/style.css'
  import pswpModule from 'photoswipe'
  import PhotoSwipeLightbox from 'photoswipe/lightbox'

  window.lightbox = new PhotoSwipeLightbox({
    pswpModule,
    children: 'a',
    gallery: '#my-gallery',
  })

  document.addEventListener(
    'astro:page-load',
    () => {
      if (lightbox) lightbox.init()
    },
    { once: false },
  )
</script>
